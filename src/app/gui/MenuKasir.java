/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.gui;

import app.dao.RekapDAO;
import app.dao.PesanDAO;
import app.db.OracleConnection;
import app.model.Rekap;
import app.model.Pesan;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.InputMismatchException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Windows
 */
public class MenuKasir extends javax.swing.JFrame {

    /**
     * Creates new form MenuKasir
     */
    public MenuKasir() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        silakan = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelMenu = new javax.swing.JTable();
        makanan = new javax.swing.JButton();
        minuman = new javax.swing.JButton();
        dessert = new javax.swing.JButton();
        dipilih = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelPesan = new javax.swing.JTable();
        okButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        subtotal = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new Panel.panelGambar_1();
        ;
        jPanel2 = new Panel.panelGambar_2();
        jPanel3 = new Panel.panelGambar_3();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu Kasir");

        silakan.setText("Silakan pilih menu di bawah ini:");

        tabelMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Menu", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMenuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelMenu);

        makanan.setText("Makanan");
        makanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makananActionPerformed(evt);
            }
        });

        minuman.setText("Minuman");
        minuman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minumanActionPerformed(evt);
            }
        });

        dessert.setText("Dessert");
        dessert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dessertActionPerformed(evt);
            }
        });

        dipilih.setText("Menu yang dipilih:");

        tabelPesan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Menu", "Harga", "Jumlah", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelPesan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPesanMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelPesan);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        backButton.setText("Kembali");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        subtotal.setText("Total:");

        jTextField1.setText(getTotalMasuk());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 199, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 194, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 187, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 194, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(subtotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dipilih)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(makanan)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(minuman)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(dessert))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(silakan)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(157, 157, 157)
                            .addComponent(backButton)
                            .addGap(48, 48, 48)
                            .addComponent(okButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(silakan)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makanan)
                    .addComponent(minuman)
                    .addComponent(dessert))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(dipilih)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subtotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(backButton))
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void makananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makananActionPerformed
        ((DefaultTableModel) tabelMenu.getModel()).setNumRows(0);
        
        OracleConnection ora = new OracleConnection();
        Connection conn = null;
        Statement st = null;
        ResultSet rs = null;

        conn = ora.getConnection();
        try {
            st = conn.createStatement();
            rs = st.executeQuery("SELECT * FROM menu WHERE jenis=0");

            DefaultTableModel model = (DefaultTableModel) tabelMenu.getModel();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2),
                    rs.getString(3), rs.getString(4)});
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                rs.close();
                st.close();
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_makananActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        MenuAwal frame = new MenuAwal();
        frame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void minumanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minumanActionPerformed
        ((DefaultTableModel) tabelMenu.getModel()).setNumRows(0);
        
        OracleConnection ora = new OracleConnection();
        Connection conn = null;
        Statement st = null;
        ResultSet rs = null;

        conn = ora.getConnection();
        try {
            st = conn.createStatement();
            rs = st.executeQuery("SELECT * FROM menu WHERE jenis=1");

            DefaultTableModel model = (DefaultTableModel) tabelMenu.getModel();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2),
                    rs.getString(3), rs.getString(4)});
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                rs.close();
                st.close();
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_minumanActionPerformed

    private void dessertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dessertActionPerformed
        ((DefaultTableModel) tabelMenu.getModel()).setNumRows(0);
        
        OracleConnection ora = new OracleConnection();
        Connection conn = null;
        Statement st = null;
        ResultSet rs = null;

        conn = ora.getConnection();
        try {
            st = conn.createStatement();
            rs = st.executeQuery("SELECT * FROM menu WHERE jenis=2");

            DefaultTableModel model = (DefaultTableModel) tabelMenu.getModel();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2),
                    rs.getString(3), rs.getString(4)});
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                rs.close();
                st.close();
                conn.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_dessertActionPerformed

    private void tabelMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMenuMouseClicked
        int jum = 0;
        try {
                jum = Integer.parseInt(JOptionPane.showInputDialog("Masukkan jumlah pesan:"));
                JTable source = (JTable)evt.getSource();
                int row = source.rowAtPoint( evt.getPoint() );
                int column = 0;
                String s = (source.getModel().getValueAt(row, column)).toString();
            
                OracleConnection ora = new OracleConnection();
                Connection conn = null;
                Statement st = null;
                ResultSet rs = null;

                conn = ora.getConnection();
                try {
                    st = conn.createStatement();
                    rs = st.executeQuery("SELECT * FROM menu WHERE id_menu = '"+s+"'");

                    DefaultTableModel model = (DefaultTableModel) tabelPesan.getModel();

                    while (rs.next()) {
                        model.addRow(new Object[]{rs.getString(1), rs.getString(2),
                            rs.getString(3), jum, jum*rs.getInt(3)});
                        totalMasuk = totalMasuk + jum*rs.getInt(3);
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                } finally {
                    try {
                        rs.close();
                        st.close();
                        conn.close();
                    } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                    }
                }
                jTextField1.setText(getTotalMasuk());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Nilai yang dimasukkan berupa angka", 
                    "Pesan error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tabelMenuMouseClicked

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        PesanDAO daoP = new PesanDAO();
        daoP.delete();
        for(int i=0;i<tabelPesan.getRowCount();i++){
            Rekap rekap = new Rekap();
            rekap.setId((tabelPesan.getValueAt(i, 0)).toString());
            rekap.setJumlah(Integer.parseInt((tabelPesan.getValueAt(i, 3)).toString()));
                
            Calendar cal = Calendar.getInstance();
            int date = cal.get(Calendar.DATE);
            int month = cal.get(Calendar.MONTH) + 1;
            int year = cal.get(Calendar.YEAR);
            String tanggal = date+"-"+month+"-"+year;
            rekap.setTanggal(tanggal);
            
            RekapDAO dao = new RekapDAO();
            int result = dao.input(rekap);
            if (i==tabelPesan.getRowCount()-1){
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil disimpan");
                } else {
                    JOptionPane.showMessageDialog(this, "Data gagal disimpan");
                }
            }
            
            Pesan pesan = new Pesan();
            pesan.setId((tabelPesan.getValueAt(i, 0)).toString());
            pesan.setNama((tabelPesan.getValueAt(i, 1)).toString());
            pesan.setHarga(Integer.parseInt((tabelPesan.getValueAt(i, 2)).toString()));
            pesan.setJumlah(Integer.parseInt((tabelPesan.getValueAt(i, 3)).toString()));
            
            daoP.input(pesan);
        }
        
        Pesanan frame = new Pesanan();
        frame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void tabelPesanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPesanMouseClicked
        JTable source = (JTable)evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        
        DefaultTableModel model = (DefaultTableModel) tabelPesan.getModel();
        
        int pilih = JOptionPane.showConfirmDialog(this, "Yakin ingin dihapus?");
        
        if (pilih == JOptionPane.YES_OPTION){
            model.removeRow(row);
        }
    }//GEN-LAST:event_tabelPesanMouseClicked

    public String getTotalMasuk(){
        String total = String.valueOf(totalMasuk);
        return total;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuKasir().setVisible(true);
            }
        });
    }

    private int totalMasuk = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton dessert;
    private javax.swing.JLabel dipilih;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton makanan;
    private javax.swing.JButton minuman;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel silakan;
    private javax.swing.JLabel subtotal;
    private javax.swing.JTable tabelMenu;
    private javax.swing.JTable tabelPesan;
    // End of variables declaration//GEN-END:variables
}
